Sample MySQL Table
CREATE DATABASE company;
USE company;
CREATE TABLE employees (
    id INT PRIMARY KEY,
    name VARCHAR(100),
    department VARCHAR(100),
    salary DECIMAL(10, 2)
);
INSERT INTO employees VALUES
(1, 'Alice', 'HR', 55000.00),
(2, 'Bob', 'IT', 75000.00),
(3, 'Charlie', 'Sales', 60000.00);

 
Search Form
<!DOCTYPE html>
<html>
<head>
    <title>Employee Directory</title>
</head>
<body>
    <h2>Search Employee by ID</h2>
    <form action="employees" method="get">
        Enter ID: <input type="text" name="id">
        <input type="submit" value="Search">
    </form>
    <h2>All Employees</h2>
    <form action="employees" method="get">
        <input type="submit" value="View All Employees">
    </form>
</body>
</html>


JDBC + Servlet
package com.example;
import java.io.IOException;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import javax.servlet.*;
import javax.servlet.http.*;

public class EmployeeServlet extends HttpServlet {
    private static final String JDBC_URL = "jdbc:mysql://localhost:3306/company";
    private static final String JDBC_USER = "root"; // change to your DB user
    private static final String JDBC_PASS = "password"; // change to your DB password
    protected void doGet(HttpServletRequest request, HttpServletResponse response)
        throws ServletException, IOException {
        String idParam = request.getParameter("id");
        List<Employee> employees = new ArrayList<>();
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            try (Connection conn = DriverManager.getConnection(JDBC_URL, JDBC_USER, JDBC_PASS)) {
                PreparedStatement stmt;
                if (idParam != null && !idParam.isEmpty()) {
                    stmt = conn.prepareStatement("SELECT * FROM employees WHERE id = ?");
                    stmt.setInt(1, Integer.parseInt(idParam));
                } else {
                    stmt = conn.prepareStatement("SELECT * FROM employees");
                }
                ResultSet rs = stmt.executeQuery();
                while (rs.next()) {
                    Employee emp = new Employee(
                        rs.getInt("id"),
                        rs.getString("name"),
                        rs.getString("department"),
                        rs.getDouble("salary")
                    );
                    employees.add(emp);
                }
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        request.setAttribute("employees", employees);
        RequestDispatcher dispatcher = request.getRequestDispatcher("employees.jsp");
        dispatcher.forward(request, response);
    }
}


A simple model class
package com.example;

public class Employee {
    private int id;
    private String name;
    private String department;
    private double salary;

    public Employee(int id, String name, String dept, double salary) {
        this.id = id;
        this.name = name;
        this.department = dept;
        this.salary = salary;
    }

    public int getId() { return id; }
    public String getName() { return name; }
    public String getDepartment() { return department; }
    public double getSalary() { return salary; }
}


Display Employees
<%@ page import="java.util.*, com.example.Employee" %>
<html>
<head><title>Employee List</title></head>
<body>
    <h2>Employee Information</h2>
    <%
        List<Employee> employees = (List<Employee>) request.getAttribute("employees");
        if (employees == null || employees.isEmpty()) {
    %>
        <p>No employee(s) found.</p>
    <%
        } else {
    %>
        <table border="1" cellpadding="5">
            <tr><th>ID</th><th>Name</th><th>Department</th><th>Salary</th></tr>
            <% for (Employee e : employees) { %>
                <tr>
                    <td><%= e.getId() %></td>
                    <td><%= e.getName() %></td>
                    <td><%= e.getDepartment() %></td>
                    <td><%= e.getSalary() %></td>
                </tr>
            <% } %>
        </table>
    <%
        }
    %>
    <br>
    <a href="index.html">Back to Search</a>
</body>
</html>


OUTPUT
Employee Information

| ID | Name | Department | Salary  |
|----|------|------------|---------|
|  2 | Bob  | IT         | 75000.0 |

[Back to Search]

Employee Information

| ID | Name    | Department | Salary  |
|----|---------|------------|---------|
|  1 | Alice   | HR         | 55000.0 |
|  2 | Bob     | IT         | 75000.0 |
|  3 | Charlie | Sales      | 60000.0 |

[Back to Search]

